/*!
 * three.js plugin for encantar.js
 * @author Alexandre Martins <alemartf(at)gmail.com> (https://github.com/alemart/encantar-js)
 * @license LGPL-3.0-or-later
 */import*as o from"three";m({"encantar.js":{version:"0.4.5"},"three.js":{version:"172"}});export class ARDemo{startSession(){throw new Error("Abstract method")}init(){return Promise.resolve()}update(){}release(){}preload(){return Promise.resolve()}get ar(){return this._ar}constructor(){this._ar=null}}class d{convertVector2(e){return new o.Vector2(e.x,e.y)}convertVector3(e){return new o.Vector3(e.x,e.y,e.z)}convertQuaternion(e){return new o.Quaternion(e.x,e.y,e.z,e.w)}convertRay(e){const c=this.convertVector3(e.origin),s=this.convertVector3(e.direction);return new o.Ray(c,s)}}class v{get session(){return this._session}get frame(){return this._frame}get viewer(){return this._viewer}get pointers(){return this._pointers}get root(){return this._root}get scene(){return this._scene}get camera(){return this._camera}get renderer(){return this._renderer}get utils(){return this._utils}constructor(){this._session=null,this._frame=null,this._viewer=null,this._pointers=[],this._origin=null,this._root=null,this._scene=null,this._camera=null,this._renderer=null,this._utils=new d}}export function encantar(i){const e=new v;function c(r,n){e._frame=n,s(n),i.update(),e._renderer.render(e._scene,e._camera),e._session.requestAnimationFrame(c)}function s(r){let n=!1;e._viewer=null,e._pointers.length=0;for(const t of r.results)if(t.of("image-tracker")){if(t.trackables.length>0){const l=t.trackables[0],_=t.viewer.view.projectionMatrix,u=t.viewer.pose.transform.matrix,h=l.pose.transform.matrix;a(_,u,h),e._origin.visible=!0,e._viewer=t.viewer,n=!0}}else t.of("pointer-tracker")&&t.trackables.length>0&&e._pointers.push.apply(e._pointers,t.trackables);n||(e._origin.visible=!1)}function a(r,n,t){e._camera.projectionMatrix.fromArray(r.read()),e._camera.projectionMatrixInverse.copy(e._camera.projectionMatrix).invert(),e._camera.matrix.fromArray(n.read()),e._camera.updateMatrixWorld(!0),e._origin.matrix.fromArray(t.read()),e._origin.updateMatrixWorld(!0)}return Promise.resolve().then(()=>i.preload()).then(()=>i.startSession()).then(r=>(i._ar=e,e._session=r,e._scene=new o.Scene,e._origin=new o.Group,e._origin.matrixAutoUpdate=!1,e._origin.visible=!1,e._scene.add(e._origin),e._root=new o.Group,e._origin.add(e._root),e._camera=new o.PerspectiveCamera,e._camera.matrixAutoUpdate=!1,e._renderer=new o.WebGLRenderer({canvas:r.viewport.canvas,alpha:!0}),r.addEventListener("end",n=>{e._origin.visible=!1,e._viewer=null,e._frame=null,e._pointers.length=0}),r.viewport.addEventListener("resize",n=>{const t=r.viewport.virtualSize;e._renderer.setPixelRatio(1),e._renderer.setSize(t.width,t.height,!1)}),Promise.resolve().then(()=>i.init()).then(()=>(r.addEventListener("end",n=>{i.release()}),r.requestAnimationFrame(c),e)).catch(n=>{throw r.end(),n}))).catch(r=>{throw console.error(r),r})}function m(i){window.addEventListener("load",()=>{try{AR;const e={"encantar.js":AR.version.replace(/-.*$/,""),"three.js":o.REVISION},c=(s,a,r)=>a!=r?console.warn(`


WARNING

This plugin has been tested with ${s} version ${a}. The version in use is ${r}. Usage of ${s} version ${a} is recommended instead.


`):void 0;for(const[s,a]of Object.entries(i))c(s,a.version,e[s])}catch(e){alert(e.message)}})}
