/*!
 * A-Frame plugin for encantar.js
 * @author Alexandre Martins <alemartf(at)gmail.com> (https://github.com/alemart/encantar-js)
 * @license LGPL-3.0-or-later
 */(function(){d({"encantar.js":{version:"0.4.5"},"A-Frame":{version:"1.6.0"}});const l=()=>({session:null,frame:null,viewer:null,pointers:[],utils:{convertVector2(e){return new THREE.Vector2(e.x,e.y)},convertVector3(e){return new THREE.Vector3(e.x,e.y,e.z)},convertQuaternion(e){return new THREE.Quaternion(e.x,e.y,e.z,e.w)},convertRay(e){const r=this.convertVector3(e.origin),t=this.convertVector3(e.direction);return new THREE.Ray(r,t)}}}),u=()=>({findTrackedImage(e,r=""){if(e===null)return null;for(const t of e.results)if(t.of("image-tracker")){for(const s of t.trackables)if(r===""||r===s.referenceImage.name)return{projectionMatrix:t.viewer.view.projectionMatrix,viewMatrixInverse:t.viewer.pose.transform.matrix,modelMatrix:s.pose.transform.matrix}}return null},findViewer(e){if(e===null)return null;for(const r of e.results)if(r.of("image-tracker")&&r.trackables.length>0)return r.viewer;return null},findTrackablePointers(e){if(e===null)return[];for(const r of e.results)if(r.of("pointer-tracker"))return r.trackables;return[]}});AFRAME.registerSystem("ar",Object.assign(l(),{_utils:u(),_started:!1,_components:[],_roots:[],init(){const e=this.el;e.getAttribute("encantar")||e.setAttribute("encantar",{}),e.setAttribute("xr-mode-ui",{enabled:!1}),e.setAttribute("vr-mode-ui",{enabled:!1}),e.setAttribute("embedded",!0),e.setAttribute("renderer",{alpha:!0}),e.addEventListener("arready",()=>{e.play()}),e.addEventListener("loaded",()=>{Promise.resolve().then(()=>e.pause())})},tick(){this.el.renderer.setAnimationLoop(null);for(let r=0;r<this._roots.length;r++)this._roots[r].teek()},startSession(){if(this._started)throw new Error("Can't start an AR session twice");this._started=!0;for(const e of this._components)e.validate();return Speedy.Promise.all([this._loadSources(),this._loadTrackers(),this._loadViewport(),this._loadPreferences()]).then(([e,r,t,s])=>AR.startSession(Object.assign({},s,{sources:e,trackers:r,viewport:t}))).then(e=>{this.session=e,this._configureSession(),this._startAnimationLoop();const r=this.el;return r.emit("arready",{ar:this}),r.emit("ar-started",{ar:this}),e}).catch(e=>{throw console.error(e),e})},register(e){this._register(this._components,e)},unregister(e){this._unregister(this._components,e)},registerRoot(e){this._register(this._roots,e)},unregisterRoot(e){this._unregister(this._roots,e)},_register(e,r){e.indexOf(r)<0&&e.push(r)},_unregister(e,r){const t=e.indexOf(r);t>=0&&e.splice(t,1)},_configureSession(){const e=this.el,r=this.session;if(r.viewport.canvas!==e.canvas)throw r.end(),new Error("Invalid A-Frame canvas");r.addEventListener("end",()=>{this.viewer=null,this.frame=null,this.pointers.length=0,e.emit("arsessionended",{ar:this})}),r.viewport.addEventListener("resize",()=>{setTimeout(()=>this._resize(),200),this._resize()}),this._resize()},_startAnimationLoop(){const e=this.el,r=this.session;e.object3D.background=null;const t=(s,i)=>{this.frame=i,this.viewer=this._utils.findViewer(i),this._updateTrackablePointers(),e.render(),r.requestAnimationFrame(t)};r.requestAnimationFrame(t)},_resize(){const e=this.el,r=this.session.viewport.virtualSize;e.renderer.setPixelRatio(1),e.renderer.setSize(r.width,r.height,!1)},_loadTrackers(){const e=this.el,r=Array.from(e.querySelectorAll("[ar-trackers]"),t=>t.components["ar-trackers"]);if(r.length>1)throw new Error("Can't define multiple groups of ar-trackers");if(r.length==0)throw new Error("Missing ar-trackers");return r[0].trackers()},_loadSources(){const e=this.el,r=Array.from(e.querySelectorAll("[ar-sources]"),t=>t.components["ar-sources"]);if(r.length>1)throw new Error("Can't define multiple groups of ar-sources");if(r.length==0)throw new Error("Missing ar-sources");return r[0].sources()},_loadViewport(){const e=this.el,r=Array.from(e.querySelectorAll("[ar-viewport]"),t=>t.components["ar-viewport"]);if(r.length>1)throw new Error("Can't define multiple ar-viewport's");if(r.length==0)throw new Error("Missing ar-viewport");return r[0].viewport()},_loadPreferences(){const r=this.el.components.encantar;if(r===void 0)throw new Error("Missing encantar in a-scene");return r.preferences()},_updateTrackablePointers(){this.pointers.length=0;const e=this._utils.findTrackablePointers(this.frame);e.length>0&&this.pointers.push.apply(this.pointers,e)}}));const n=e=>Object.assign({},e,{init(){Object.defineProperty(this,"ar",{get:function(){return this.el.sceneEl.systems.ar}}),this.ar.register(this),e.init!==void 0&&e.init.call(this),this.el.sceneEl.hasLoaded&&this.validate()},remove(){e.remove!==void 0&&e.remove.call(this),this.ar.unregister(this)},validate(){e.validate!==void 0&&e.validate.call(this)}});AFRAME.registerComponent("encantar",n({schema:{mode:{type:"string",default:"immersive"},stats:{type:"boolean",default:!1},gizmos:{type:"boolean",default:!1},autoplay:{type:"boolean",default:!0}},sceneOnly:!0,_started:!1,init(){this._started=!1},play(){this._started||(this._started=!0,this.data.autoplay&&this.startSession())},remove(){this.ar.session!==null&&this.ar.session.end()},preferences(){return{mode:this.data.mode,stats:this.data.stats,gizmos:this.data.gizmos}},startSession(){return this.ar.startSession()}})),AFRAME.registerComponent("ar-camera",n({dependencies:["camera"],init(){const e=this.el;e.setAttribute("camera",{active:!0}),e.setAttribute("wasd-controls",{enabled:!1}),e.setAttribute("look-controls",{enabled:!1}),e.setAttribute("position",{x:0,y:0,z:0});const r=e.getObject3D("camera");r.matrixAutoUpdate=!1},tick(){const e=this.ar,r=this.el,t=e._utils.findTrackedImage(e.frame);if(t===null)return;const s=r.getObject3D("camera");s.projectionMatrix.fromArray(t.projectionMatrix.read()),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.matrix.fromArray(t.viewMatrixInverse.read()),s.updateMatrixWorld(!0)},validate(){if(!this.el.getAttribute("camera"))throw new Error("Incorrect ar-camera");if(this.el.parentNode!==this.el.sceneEl)throw new Error("ar-camera must be a direct child of a-scene")}})),AFRAME.registerPrimitive("ar-camera",{defaultComponents:{"ar-camera":{},camera:{}}}),AFRAME.registerComponent("ar-root",n({schema:{referenceImage:{type:"string",default:""}},_origin:null,_firstRun:!0,init(){const e=new THREE.Group;e.matrixAutoUpdate=!1;const r=this.el.object3D;r.parent.add(e),e.add(r),this._origin=e,this._firstRun=!0,this.ar.registerRoot(this)},remove(){const e=this._origin,r=this.el.object3D;e.parent.add(r),e.removeFromParent(),this._origin=null,this.ar.unregisterRoot(this)},play(){const e=this._origin;e.visible=!0,this._firstRun&&(this._firstRun=!1,e.visible=!1,this.el.pause())},pause(){const e=this._origin;e.visible=!1},teek(){const e=this.ar,r=this.data.referenceImage,t=e._utils.findTrackedImage(e.frame,r);if(t===null){this.el.pause();return}const s=this._origin;s.matrix.fromArray(t.modelMatrix.read()),s.updateMatrixWorld(!0),this.el.play()},validate(){if(this.el.parentNode!==this.el.sceneEl)throw new Error("ar-root must be a direct child of a-scene")}})),AFRAME.registerPrimitive("ar-root",{defaultComponents:{"ar-root":{}},mappings:{"reference-image":"ar-root.referenceImage"}}),AFRAME.registerComponent("ar-sources",n({validate(){if(this.el.parentNode!==this.el.sceneEl)throw new Error("ar-sources must be a direct child of a-scene")},sources(){const e=[];for(const r of this.el.children)if(r.components!==void 0)for(const t in r.components){const s=r.components[t];s.ar===this.ar&&typeof s.source=="function"&&e.push(s.source())}return e}})),AFRAME.registerPrimitive("ar-sources",{defaultComponents:{"ar-sources":{}}}),AFRAME.registerComponent("ar-camera-source",n({schema:{resolution:{type:"string",default:"md"},facingMode:{type:"string",default:"environment"}},validate(){if(!this.el.parentNode.getAttribute("ar-sources"))throw new Error("ar-camera-source must be a direct child of ar-sources")},source(){return AR.Source.Camera({resolution:this.data.resolution,constraints:{facingMode:this.data.facingMode}})}})),AFRAME.registerPrimitive("ar-camera-source",{defaultComponents:{"ar-camera-source":{}},mappings:{resolution:"ar-camera-source.resolution","facing-mode":"ar-camera-source.facingMode"}}),AFRAME.registerComponent("ar-video-source",n({schema:{video:{type:"selector"}},validate(){if(!this.el.parentNode.getAttribute("ar-sources"))throw new Error("ar-video-source must be a direct child of ar-sources")},source(){return AR.Source.Video(this.data.video)}})),AFRAME.registerPrimitive("ar-video-source",{defaultComponents:{"ar-video-source":{}},mappings:{video:"ar-video-source.video"}}),AFRAME.registerComponent("ar-canvas-source",n({schema:{canvas:{type:"selector"}},validate(){if(!this.el.parentNode.getAttribute("ar-sources"))throw new Error("ar-canvas-source must be a direct child of ar-sources")},source(){return AR.Source.Canvas(this.data.canvas)}})),AFRAME.registerPrimitive("ar-canvas-source",{defaultComponents:{"ar-canvas-source":{}},mappings:{canvas:"ar-canvas-source.canvas"}}),AFRAME.registerComponent("ar-pointer-source",n({schema:{},validate(){if(!this.el.parentNode.getAttribute("ar-sources"))throw new Error("ar-pointer-source must be a direct child of ar-sources")},source(){return AR.Source.Pointer()}})),AFRAME.registerPrimitive("ar-pointer-source",{defaultComponents:{"ar-pointer-source":{}},mappings:{}}),AFRAME.registerComponent("ar-trackers",n({validate(){if(this.el.parentNode!==this.el.sceneEl)throw new Error("ar-trackers must be a direct child of a-scene")},trackers(){const e=[];for(const r of this.el.children)if(r.components!==void 0)for(const t in r.components){const s=r.components[t];s.ar===this.ar&&typeof s.tracker=="function"&&e.push(s.tracker())}return Speedy.Promise.all(e)}})),AFRAME.registerPrimitive("ar-trackers",{defaultComponents:{"ar-trackers":{}}}),AFRAME.registerComponent("ar-image-tracker",n({schema:{resolution:{type:"string",default:"sm"}},validate(){if(!this.el.parentNode.getAttribute("ar-trackers"))throw new Error("ar-image-tracker must be a direct child of ar-trackers")},tracker(){const e=AR.Tracker.Image({resolution:this.data.resolution}),r=[];for(const i of this.el.children)if(i.components!==void 0)for(const a in i.components){const c=i.components[a];c.ar===this.ar&&typeof c.referenceImage=="function"&&r.push(c.referenceImage())}const t=this.ar,s=this.el.sceneEl;return e.addEventListener("targetfound",i=>s.emit("artargetfound",{ar:t,referenceImage:i.referenceImage})),e.addEventListener("targetlost",i=>s.emit("artargetlost",{ar:t,referenceImage:i.referenceImage})),e.database.add(r).then(()=>e)}})),AFRAME.registerPrimitive("ar-image-tracker",{defaultComponents:{"ar-image-tracker":{}},mappings:{resolution:"ar-image-tracker.resolution"}}),AFRAME.registerComponent("ar-reference-image",n({schema:{name:{type:"string",default:""},src:{type:"string",default:""}},validate(){if(!this.el.parentNode.getAttribute("ar-image-tracker"))throw new Error("ar-reference-image must be a direct child of ar-image-tracker")},referenceImage(){if(this.data.src=="")throw new Error("Unspecified src attribute of ar-reference-image");const e=new Image;return e.crossOrigin="anonymous",e.src=this.data.src,{name:this.data.name!=""?this.data.name:void 0,image:e}}})),AFRAME.registerPrimitive("ar-reference-image",{defaultComponents:{"ar-reference-image":{}},mappings:{name:"ar-reference-image.name",src:"ar-reference-image.src"}}),AFRAME.registerComponent("ar-pointer-tracker",n({schema:{space:{type:"string",default:"normalized"}},validate(){if(!this.el.parentNode.getAttribute("ar-trackers"))throw new Error("ar-pointer-tracker must be a direct child of ar-trackers")},tracker(){return AR.Tracker.Pointer({space:this.data.space})}})),AFRAME.registerPrimitive("ar-pointer-tracker",{defaultComponents:{"ar-pointer-tracker":{}},mappings:{space:"ar-pointer-tracker.space"}}),AFRAME.registerComponent("ar-viewport",n({schema:{resolution:{type:"string",default:"lg"},style:{type:"string",default:"best-fit"}},validate(){if(this.el.parentNode!==this.el.sceneEl)throw new Error("ar-viewport must be a direct child of a-scene")},viewport(){const e=this.el.sceneEl,r=[],t=this.el.components["ar-viewport-fullscreen-ui"];for(const s of this.el.children)if(s.components!==void 0)for(const i in s.components){const a=s.components[i];a.ar===this.ar&&typeof a.hudContainer=="function"&&r.push(a.hudContainer())}if(r.length>1)throw new Error("Can't define multiple ar-hud's in an ar-viewport");return r.length==0&&r.push(void 0),AR.Viewport(Object.assign({container:this.el,hudContainer:r[0],canvas:e.canvas,resolution:this.data.resolution,style:this.data.style},t?{fullscreenUI:t.data.enabled}:{}))}})),AFRAME.registerPrimitive("ar-viewport",{defaultComponents:{"ar-viewport":{}},mappings:{resolution:"ar-viewport.resolution",style:"ar-viewport.style","fullscreen-ui":"ar-viewport-fullscreen-ui"}}),AFRAME.registerComponent("ar-viewport-fullscreen-ui",n({schema:{enabled:{type:"boolean",default:!0}}}));let o=function(){const e=document.createElement("style");return e.textContent="ar-hud, [ar-hud] { display: none; }",document.head.appendChild(e),e}();AFRAME.registerComponent("ar-hud",n({init(){o!==null&&(document.head.removeChild(o),o=null),this.el.hidden=!0},validate(){if(!this.el.parentNode.getAttribute("ar-viewport"))throw new Error("ar-hud must be a direct child of ar-viewport")},hudContainer(){return this.el}})),AFRAME.registerPrimitive("ar-hud",{defaultComponents:{"ar-hud":{}}});function d(e){window.addEventListener("load",()=>{try{AR,AFRAME;const r={"encantar.js":AR.version.replace(/-.*$/,""),"A-Frame":AFRAME.version},t=(s,i,a)=>i!=a?console.warn(`


WARNING

This plugin has been tested with ${s} version ${i}. The version in use is ${a}. Usage of ${s} version ${i} is recommended instead.


`):void 0;for(const[s,i]of Object.entries(e))t(s,i.version,r[s])}catch(r){alert(r.message)}})}})();
