/*!
 * An Asset Manager for AR
 * @version 1.0.0
 * @author Alexandre Martins (https://encantar.dev)
 * @license LGPL-3.0-or-later
 */class AssetManager{url(e){return this._get(e).url}file(e){return this._get(e).file}has(e){return this._assetMap.has(e)}preload(e,s={}){if(Array.isArray(e))return Promise.all(e.map(n=>this.preload(n,s)));if(typeof e!="string")return Promise.reject(new TypeError);const r=e.substring(1+e.lastIndexOf("/"));return this._assetMap.has(r)?Promise.resolve():new Promise((n,o)=>{const a=s.timeout!==void 0?s.timeout:1/0,c=()=>o(new Error("Can't preload assets: slow connection! Try refreshing the page.")),h=isFinite(a)?setTimeout(c,a*1e3):void 0;fetch(e).then(t=>{if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);return t.blob()}).then(t=>{const i=new File([t],r,{type:t.type}),u=URL.createObjectURL(i),f={file:i,url:u};this._assetMap.set(r,f)}).catch(t=>{console.warn(`Can't preload asset "${r}"! ${t.message} (${e})`)}).finally(()=>{clearTimeout(h),n()})})}_get(e){const s=this._assetMap.get(e);if(!s)throw new Error(`Asset "${e}" has not been preloaded!`);return s}constructor(){this._assetMap=new Map}}
